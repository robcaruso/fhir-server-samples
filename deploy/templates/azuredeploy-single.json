{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appNameNifi": {
            "defaultValue": "nifi",
            "type": "String"
        },
        "appNameMdmi": {
            "defaultValue": "mdmi-rt-service",
            "type": "String"
        },
        "appNameTerminology": {
            "defaultValue": "terminology-service",
            "type": "String"
        },
        "appNameTransformation": {
            "defaultValue": "transformation-service",
            "type": "String"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "aadAuthority": {
            "type": "string",
            "defaultValue": "https://login.microsoftonline.com/common",
            "metadata": {
                "description": "OAuth Authority"
            }
        },
        "aadAudience": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "OAuth Audience, if blank, will be set to fhirServerUrl"
            }
        },
        "aadServiceClientId": {
            "type": "string",
            "metadata": {
                "description": "AAD service client application id"
            }
        },
        "aadServiceClientSecret": {
            "type": "string",
            "metadata": {
                "description": "AAD service client secret"
            }
        },
        "fhirServerUrl": {
            "type": "string",
            "metadata": {
                "description": "FHIR Server URL (also Audience used for resource application)"
            }
        },
        "cpuCores": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of CPU cores"
            }
        },
        "memoryGb": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": "Memory in GB"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        }
    },
    "variables": {
        "storageAccountName": "[replace(concat(toLower(parameters('appNameNifi')), 'sa', resourceGroup().name),'-','')]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "aadAudience": "[if(empty(parameters('aadAudience')),parameters('fhirServerUrl'),parameters('aadAudience'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-12-01",
            "location": "[parameters('location')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-03-01-preview",
                    "name": "default/cdaimport",
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                },
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-03-01-preview",
                    "name": "default/cdarejected",
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-04-01",
            "name": "[parameters('appNameNifi')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('appNameNifi')]",
                        "properties": {
                            "image": "repository-hc.openplatform.healthcare/nifi:azv1",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 8080
                                }
                            ],
                            "environmentVariables": [
                                {
                                    "name": "TERMINOLOGY_SERVICE",
                                    "value": "[concat('http://terminology-service-', resourceGroup().name, '.', parameters('location'), '.azurecontainer.io:8080')]"
                                },
                                {
                                    "name": "TRANSFORMATION_SERVICE",
                                    "value": "[concat('http://transformation-service-',resourceGroup().name, '.', parameters('location'), '.azurecontainer.io:8080')]"
                                },
                                {
                                    "name": "FHIR_SERVER",
                                    "value": "[parameters('fhirServerUrl')]"
                                },
                                {
                                    "name": "AAD_AUTHORITY",
                                    "value": "[parameters('aadAuthority')]"
                                },
                                {
                                    "name": "AAD_AUDIENCE",
                                    "value": "[parameters('aadAudience')]"
                                },
                                {
                                    "name": "CLIENT_ID",
                                    "value": "[parameters('aadServiceClientId')]"
                                },
                                {
                                    "name": "CLIENT_SECRET",
                                    "value": "[parameters('aadServiceClientSecret')]"
                                },
                                {
                                    "name": "STORAGE_ACT_NAME",
                                    "value": "[variables('storageAccountName')]"
                                },
                                {
                                    "name": "STORAGE_ACT_ID",
                                    "value": "[variables('storageAccountId')]"
                                },
                                {
                                    "name": "STORAGE_ACT_KEY",
                                    "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('cpuCores')]",
                                    "memoryInGB": "[parameters('memoryGb')]"
                                }
                            }
                        }
                    }
                ],
                "imageRegistryCredentials": [
                    {
                        "server": "repository-hc.openplatform.healthcare",
                        "username": "dhp-devops",
                        "password": "[parameters('dockerPassword')]"
                    }
                ],
                "restartPolicy": "OnFailure",
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 8080
                        }
                    ],
                    "type": "Public",
                    "dnsNameLabel": "[concat('hc-nifi-', resourceGroup().name)]"
                },
                "osType": "Linux"
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-04-01",
            "name": "[parameters('appNameMdmi')]",
            "location": "[parameters('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('appNameMdmi')]",
                        "properties": {
                            "image": "docker-registry.openplatform.healthcare/mdmi-rt-service:azv1",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 8080
                                }
                            ],
                            "environmentVariables": [],
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('cpuCores')]",
                                    "memoryInGB": "[parameters('memoryGb')]"
                                }
                            }
                        }
                    }
                ],
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 8080
                        }
                    ],
                    "type": "Public",
                    "dnsNameLabel": "[concat(parameters('appNameMdmi'), '-' ,resourceGroup().name)]"
                },
                "restartPolicy": "OnFailure",
                "osType": "Linux"
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-04-01",
            "name": "[parameters('appNameTransformation')]",
            "location": "[parameters('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('appNameTransformation')]",
                        "properties": {
                            "image": "docker-registry.openplatform.healthcare/dhp-transformation-service:azv1",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 8080
                                }
                            ],
                            "environmentVariables": [
                                {
                                    "name": "MDMIAAS_URL",
                                    "value": "[concat('http://mdmi-rt-service-',resourceGroup().name,'.', parameters('location'), '.azurecontainer.io:8080/org.mdmi.rt.service/transformation')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('cpuCores')]",
                                    "memoryInGB": "[parameters('memoryGb')]"
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 8080
                        }
                    ],
                    "type": "Public",
                    "dnsNameLabel": "[concat(parameters('appNameTransformation'), '-' ,resourceGroup().name)]"
                },
                "osType": "Linux"
            }
        },        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-04-01",
            "name": "[parameters('appNameTerminology')]",
            "location": "[parameters('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('appNameTerminology')]",
                        "properties": {
                            "image": "docker-registry.openplatform.healthcare/dhp-terminology-service:azv1",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 8080
                                }
                            ],
                            "environmentVariables": [
                                {
                                    "name": "WKHL_ENABLED",
                                    "value": "false"
                                },
                                {
                                    "name": "SERVER_PORT",
                                    "value": "8080"
                                },
                                {
                                    "name": "profile",
                                    "value": "default"
                                },
                                {
                                    "name": "env",
                                    "value": "default"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('cpuCores')]",
                                    "memoryInGB": "[parameters('memoryGb')]"
                                }
                            }
                        }
                    }
                ],
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 8080
                        }
                    ],
                    "type": "Public",
                    "dnsNameLabel": "[concat(parameters('appNameTerminology'), '-' ,resourceGroup().name)]"
                },
                "restartPolicy": "OnFailure",
                "osType": "Linux"
            }
        }
        
    ]
}